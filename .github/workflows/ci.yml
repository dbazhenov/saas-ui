---
name: CI
on:
  schedule:
    # run every Sunday to re-populate caches after they are cleaned on Saturday
    - cron: "0 12 * * 0"
  push:
    branches:
      - main
      - dev
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  test:
    name: Run unit tests
    timeout-minutes: 15

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [16.14.1]

    steps:
      - name: Checkout code
        uses: percona-platform/checkout@v3

      - name: Install Node.js ${{ matrix.node-version }}
        uses: percona-platform/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: make init

      - name: Run unit tests
        run: make test

      - name: Build platform-ui artifacts
        run: make build

      #- name: Setup tmate session on failure
      #  if: ${{ failure() }}
      #  uses: percona-platform/action-tmate@v3

  docker:
    name: Build Docker image
    timeout-minutes: 10
    needs: test

    outputs:
      docker_tag: ${{ env.DOCKER_TAG }}

    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        node-version: [16.14.1]
        go-version: [1.19.x]

    steps:
      - name: Checkout code
        uses: percona-platform/checkout@v3

      # required for the normal work of 'extract-docker-tag'
      - name: Set up Go ${{ matrix.go-version }}
        if: matrix.go-version != 'tip'
        uses: percona-platform/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Node.js ${{ matrix.node-version }}
        uses: percona-platform/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: make init

      - name: Enable experimental Docker features for --squash flag
        run: sudo .github/workflows/enable-docker-experimental.sh

      - name: Login to Docker registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Extract Docker image tag
        uses: percona-platform/extract-docker-tag-action@v1.4.0

      - name: Build platform UI artifacts
        run: make build

      - name: Build Docker image with tag "${{ env.DOCKER_TAG }}"
        run: make docker-build

      - name: Tag Docker image with more details about the build
        run: make docker-tag

      - name: Push Docker image
        run: make docker-push

  e2e:
    name: Dispatch E2E tests
    timeout-minutes: 1
    needs: docker

    runs-on: ubuntu-22.04

    steps:
      - name: Set REPO env variable
        run: echo "REPO=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Trigger dispatch in ${{ github.head_ref }} branch
        uses: percona-platform/workflow-dispatch@v1
        continue-on-error: true
        id: branch_dispatch
        with:
          workflow: E2E
          token: ${{ secrets.ROBOT_TOKEN }}
          repo: percona-platform/cicd
          ref: ${{ github.head_ref }}
          inputs: |
            {
                "branch": "${{ github.head_ref }}",
                "repo": "${{ github.repository }}",
                "tags": "{\"${{ env.REPO }}\": \"${{ needs.docker.outputs.docker_tag }}\"}",
                "ui_tests_branch": "${{ github.head_ref }}",
                "sha": "${{ github.event.pull_request.head.sha }}",
                "skip_ui_tests": "${{false}}",
                "skip_api_tests": "${{true}}"
            }

      - name: Trigger dispatch in main branch
        uses: percona-platform/workflow-dispatch@v1
        if: ${{ steps.branch_dispatch.outcome != 'success' }}
        with:
          workflow: E2E
          token: ${{ secrets.ROBOT_TOKEN }}
          repo: percona-platform/cicd
          ref: main
          inputs: |
            {
                "branch": "${{ github.head_ref }}",
                "repo": "${{ github.repository }}",
                "tags": "{\"${{ env.REPO }}\": \"${{ needs.docker.outputs.docker_tag }}\"}",
                "ui_tests_branch": "${{ github.head_ref }}",
                "sha": "${{ github.event.pull_request.head.sha }}",
                "skip_ui_tests": "${{false}}",
                "skip_api_tests": "${{true}}"
            }
